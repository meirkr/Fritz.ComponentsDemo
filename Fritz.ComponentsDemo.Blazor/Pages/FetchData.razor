@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
	<p><em>Loading...</em></p>
}
else
{
 
<SuperTable Headers="@Headers" Collection="@forecasts">
	<RowTemplate Context="forecast">
		<Fritz.ComponentsDemo.Blazor.Components.TableCell>@forecast.Date.ToShortDateString()</Fritz.ComponentsDemo.Blazor.Components.TableCell>
		<TableCell>@forecast.TemperatureC.ToString()</TableCell>
		<TableCell>@forecast.TemperatureF.ToString()</TableCell>
		<TableCell Width="300" style="background-color: black; color: lime; font-weight: bold;">@forecast.Summary</TableCell>
	</RowTemplate>
</SuperTable>

}

@code {
	private WeatherForecast[] forecasts;

	private readonly static string[] Headers = new string[] { "Date", "Temp. (C)", "Temp. (F)", "Summary" };

	protected override async Task OnInitializedAsync()
	{
		forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
	}

	public class WeatherForecast
	{
		public DateTime Date { get; set; }

		public int TemperatureC { get; set; }

		public string Summary { get; set; }

		public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
	}
}
